#!/usr/bin/env raku
use App::SerializerPerf;

#| Compare serialization codec performance and fidelity
multi MAIN(
    UInt:D :$runs   = 1,    #= Runs per test (for stable results)
    UInt:D :$count  = 10,   #= Encodes/decodes per run (for sufficient duration)
    IO()   :$source = 'fez-test.json'  #= Test file containing JSON data
) is export {
    say "Testing $runs run{$runs == 1 ?? '' !! 's'} of $count iteration{$count == 1 ?? '' !! 's'} each";

    my $*COUNT = $count;
    my $*RUNS  = $runs;

    my $json      = $source.slurp;
    my $from-json = from-json $json;
    time-codecs('JSON source', $from-json);

    my $AoA-Int = [ [$++ xx 100] xx 100 ];
    time-codecs('100 x 100 Int array', $AoA-Int);

    my $AoA-Num = [ [rand xx 100] xx 100 ];
    time-codecs('100 x 100 Num array', $AoA-Num);

    my $AoA-Rat = [ [((^256).pick / (1..255).pick) xx 100] xx 100 ];
    time-codecs('100 x 100 small Rat array', $AoA-Rat);

    my $buf8 = buf8.new((^256).roll(100_000));
    time-codecs('100_000 byte buf8', $buf8);

    my $na32 = array[num32].new(rand xx 10_000);
    time-codecs('10_000 entry array[num32]', $na32);

    my $na64 = array[num64].new(rand xx 10_000);
    time-codecs('10_000 entry array[num64]', $na64);
}
